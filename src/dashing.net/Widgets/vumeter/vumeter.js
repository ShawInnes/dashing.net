// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Dashing.Vumeter = (function(_super) {
    __extends(Vumeter, _super);

    function Vumeter() {
      return Vumeter.__super__.constructor.apply(this, arguments);
    }

    Vumeter.accessor('value', Dashing.AnimatedValue);

    Vumeter.prototype.ready = function() {
      $(this.node).find(".value").before("<div class='gauge'></div>");
      $(this.node).find(".gauge").append("<div class='gauge-meter'></div>");
      return this.meter = $(this.node).find(".gauge-meter");
    };

    Vumeter.prototype.onData = function(data) {
      return this.meter.animate({
        height: Batman.mixin(Batman.Filters.percentage(data.value, this.get("max")) + "%")
      });
    };

    Vumeter.accessor("total", function() {
      return this.get("max");
    });

    Vumeter.accessor("suffix", function() {
      return " %";
    });

    return Vumeter;

  })(Dashing.Widget);

  Batman.mixin(Batman.Filters, {
    percentage: function(n, total) {
      return Math.round(n * 100 / total);
    }
  });

}).call(this);

//# sourceMappingURL=vumeter.map
